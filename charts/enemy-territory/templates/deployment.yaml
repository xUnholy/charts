apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "enemy-territory.fullname" . }}
  labels:
    {{- include "enemy-territory.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "enemy-territory.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "enemy-territory.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enemy-territory.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - args:
          - --repo=https://github.com/{{ .Values.repoConfig.owner }}/{{ .Values.repoConfig.repository }}
          - --branch={{ .Values.repoConfig.branch }
          - --username={{ .Values.repoConfig.owner }
          - --password={{ .Values.repoConfig.token }
          - --root=/etlegacy/legacy/server
          - --one-time=true
          image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
          imagePullPolicy: IfNotPresent
          name: git-sync
          volumeMounts:
          - mountPath: /etlegacy/legacy/server
            name: server-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: enemy-territory
        serviceAccountName: enemy-territory
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: server-config
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["cp /etlegacy/legacy/server/{{ .Values.repoConfig.repository }})/* /etlegacy/legacy/; /etlegacy/start.sh;" ]
          command: ["/bin/bash", "-c", "--"]
          ports:
            - name: enemy-territory
              containerPort: 27960
              protocol: UDP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: server-config
              mountPath: /etlegacy/legacy/server
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: server-config
          emptyDir: {}
